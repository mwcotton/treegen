(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{334:function(e,t,n){var content=n(355);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(14).default)("22036937",content,!0,{sourceMap:!1})},354:function(e,t,n){"use strict";var r=n(334);n.n(r).a},355:function(e,t,n){(t=n(13)(!1)).push([e.i,"h1 .special-color[data-v-960805ac]{color:#adff2f}li[data-v-960805ac],p[data-v-960805ac]{color:#b4b4b4}h3[data-v-960805ac]{color:#adff2f}.rounded-card[data-v-960805ac]{border-radius:25px}.main-box[data-v-960805ac]{padding:20px}",""]),e.exports=t},362:function(e,t,n){"use strict";n(224);var r=n(173);t.a=Object(r.a)("flex")},409:function(e,t,n){"use strict";n.r(t);n(354);var r=n(81),o=n(115),c=n.n(o),l=n(344),h=n(402),d=n(362),v=n(403),component=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-row",{attrs:{justify:"center",align:"center"}},[n("v-col",{attrs:{cols:"12",sm:"8",md:"6"}},[n("div",{staticClass:"text-center"},[n("h1",{staticStyle:{"font-size":"50px"}},[e._v("\n        About "),n("span",{staticClass:"special-color"},[e._v("Tree")]),e._v("Gen\n      ")])]),e._v(" "),n("v-card",{staticClass:"rounded-card"},[n("v-flex",{staticClass:"main-box"},[n("p",[e._v("\n          TreeGen is a software developed by students on the BBSRC\n          Interdisciplinary Bioscience DTP at the University of Oxford.\n        ")]),e._v(" "),n("h3",[e._v("What is TreeGen?")]),e._v(" "),n("p",[e._v("\n          TreeGen generates and animates the biological patterns that can be\n          obtained using Lindenmayer systems with graphical modeling, as\n          described in the textbook “The Algorithmic Beauty of Plants”. This\n          web application allows you to visualise the fractal-like biological\n          patterns that can be generated using simple OL-systems.\n        ")]),e._v(" "),n("h3",[e._v("Usage")]),e._v(" "),n("p",[e._v("\n          To use TreeGen, simply go to the page 'Draw Trees', select the\n          parameters you want (or keep the default parameters) and click\n          anywhere on the canvas to draw a tree.\n        ")]),e._v(" "),n("h3",[e._v("L-systems")]),e._v(" "),n("p",[e._v("\n          A Lindenmayer system, or L-system for short, is a recursive\n          framework that consists of an alphabet of symbols that can be used\n          to make strings, a set of production rules that define the way each\n          symbol can be iteratively replaced by a larger string of symbols,\n          and an axiom which is an initial string from which to begin\n          construction.\n          "),n("br"),e._v("\n          The L-system can then be visually represented as a geometric\n          structure, which is generated by a 'turtle' mechanism that\n          translates the strings generated by the L-system.\n        ")]),e._v(" "),n("p"),e._v(" "),n("p",[e._v("\n          L-systems can be used to model the growth processes of trees using\n          computer-generated plant-like structures that imitate biological\n          patterns.\n        ")]),e._v(" "),n("p",[e._v("\n          The L-systems that TreeGen uses to generate trees are context-free\n          (OL-systems). In OL-systems, the production rules apply\n          independently from the context in which the previous generations\n          were generated. TreeGen does not support tree generation using\n          context-sensitive L-systems, where the production rules depend on\n          the predecessor's context.\n        ")]),e._v(" "),n("p",[e._v("\n          You can read more about L-systems by following the links on our\n          'Links' page!\n        ")]),e._v(" "),n("h3",[e._v("Parameters")]),e._v(" "),n("p",[e._v("\n          OL-systems can be either deterministic (DOL-systems) or stochastic.\n          TreeGen allows you to explore the structures that can be generated\n          by both of these types of models.\n        ")]),e._v(" "),n("ul",[n("li",[e._v("\n            In "),n("b",[e._v("deterministic")]),e._v(" L-systems, the same rules are applied at\n            each step of the generation of the tree's structure. All trees\n            generated by a deterministic L-system with the same parameters\n            will be identical.\n            "),n("br"),e._v("\n            To generate a deterministic tree, select System Rules:\n            'Deterministic' in the parameters, then choose a production rule\n            for X and for F in the dropdown menus below. You can also specify\n            your own custom rule for X and/or F by selecting 'Custom' and\n            typing your rule in the textbox below (make sure your rule is\n            using the same syntax as the ones proposed).\n          ")]),e._v(" "),n("br"),e._v(" "),n("li",[e._v("\n            In "),n("b",[e._v("stochastic")]),e._v(" L-systems, the production rules applied at\n            each step of tree generation are selected stochastically according\n            to a pre-defined probability distribution. Each rendition of the\n            tree is then different from the others. To generate a stochastic\n            tree, select System Rules: 'Stochastic' in the parameters. "),n("br"),e._v("\n            Note: TreeGen only allows for a uniform probability distribution\n            across the rules listed in the menu.\n          ")])]),e._v(" "),n("br"),e._v(" "),n("p",[e._v("\n          You can specify the value of the branching angle (i.e. the angle at\n          which the new branches will form with respect to the previous\n          branch) and whether the angle should be deterministic or stochastic\n          (with either 1% or 0.1% variability from specified value).\n        ")]),e._v(" "),n("p",[e._v("\n          You can also specify the length scale of the tree branches, and\n          whether the branch lengths should be deterministic or stochastic\n          (with either 10% or 50% variability from specified value).\n        ")]),e._v(" "),n("p",[e._v("\n          Lastly, use the 'RESET' button to set the parameters back to default\n          and the 'CLEAR' button to clear the canvas from all drawn tree\n          structures.\n        ")])])],1)],1)],1)}),[],!1,null,"960805ac",null);t.default=component.exports;c()(component,{VCard:l.a,VCol:h.a,VFlex:d.a,VRow:v.a})}}]);